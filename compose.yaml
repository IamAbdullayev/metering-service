version: "3.9"

services:
  server:
    build:
      context: .
    container_name: metering
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/metering-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/meter-app

      KEYCLOAK_REALM: meter-app
      KEYCLOAK_CLIENT_ID: meter-api
      KEYCLOAK_CLIENT_SECRET: MnbTRhVBBJ7qxIVdh2AmaO2iPNyRYzmi
      KEYCLOAK_GRANT_TYPE: password
      KEYCLOAK_URL: http://keycloak:8080

    networks:
      - metering-net

  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: metering-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/metering-db/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d metering-db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - metering-net

  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak-data:/var/lib/postgresql/keycloak-db/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - metering-net

  keycloak:
    image: keycloak/keycloak:latest
    container_name: keycloak
    command: ["start-dev"]
    environment:
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "8081:8080"
      - "9000:9000"
    depends_on:
      keycloak-db:
        condition: service_healthy
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    networks:
      - metering-net

volumes:
  db-data:
  keycloak-data:

networks:
  metering-net:
